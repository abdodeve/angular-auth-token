{"version":3,"file":"auth-token.js.map","sources":["ng://auth-token/auth-token/auth-interceptor.ts","ng://auth-token/auth-token/auth-token.module.ts"],"sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  tap,\r\n  mergeMap,\r\n  flatMap,\r\n  map,\r\n  switchMap,\r\n  catchError\r\n} from \"rxjs/operators\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { Observable, from, throwError, BehaviorSubject } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\n// import { environment } from \"./../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private environment;\r\n  private refreshEndpoint: string;\r\n  private token;\r\n  private refreshToken;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(\"environment\")\r\n    environment\r\n  ) {\r\n    this.environment = environment;\r\n    this.refreshEndpoint = this.environment[\"refreshtoken-endpoint\"];\r\n    this.token = localStorage.getItem(\"access-token\");\r\n    this.refreshToken = localStorage.getItem(\"refresh-token\");\r\n  }\r\n  //function which will be called for all http calls\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse && error.status === 401) {\r\n          if (this.token) {\r\n            // Add token to header\r\n            request = request.clone({\r\n              headers: request.headers.set(\r\n                \"Authorization\",\r\n                \"Bearer \" + this.token\r\n              )\r\n            });\r\n            // Refresh Token AND Retry\r\n            return this.refreshTokenAndRetry(request, next);\r\n          } else {\r\n            console.warn(\"Token doesn't exist !\", \"Bearer \" + this.token);\r\n            return next.handle(request);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * refreshToken\r\n   * Refresh the token after expiration\r\n   * @param token\r\n   * @param request\r\n   * @param next\r\n   */\r\n  refreshTokenAndRetry(request: HttpRequest<any>, next: HttpHandler) {\r\n    return this.http.post(this.refreshEndpoint, {}).pipe(\r\n      switchMap((response: any) => {\r\n        console.log(\"response\", response);\r\n        localStorage.setItem(\"access-token\", response[\"access-token\"]);\r\n        localStorage.setItem(\"refresh-token\", response[\"refresh-token\"]);\r\n        request = request.clone({\r\n          headers: request.headers.set(\r\n            \"Authorization\",\r\n            \"Bearer \" + response[\"refresh-token\"]\r\n          )\r\n        });\r\n        return next.handle(request);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { AuthInterceptor } from \"./auth-interceptor\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AuthTokenModule {}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAuBA,MAAa,eAAe;;;;;IAM1B,YACU,IAAgB,EAExB,WAAW;QAFH,SAAI,GAAJ,IAAI,CAAY;QAIxB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;QACjE,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;KAC3D;;;;;;;IAED,SAAS,CACP,OAAyB,EACzB,IAAiB;QAEjB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,UAAU;;;;QAAC,KAAK;YACd,IAAI,KAAK,YAAY,iBAAiB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC9D,IAAI,IAAI,CAAC,KAAK,EAAE;;oBAEd,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;wBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAC1B,eAAe,EACf,SAAS,GAAG,IAAI,CAAC,KAAK,CACvB;qBACF,CAAC,CAAC;;oBAEH,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBACjD;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC9D,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBAC7B;aACF;SACF,EAAC,CACH,CAAC;KACH;;;;;;;;IASD,oBAAoB,CAAC,OAAyB,EAAE,IAAiB;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,IAAI,CAClD,SAAS;;;;QAAC,CAAC,QAAa;YACtB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAClC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;YAC/D,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;YACjE,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAC1B,eAAe,EACf,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,CACtC;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B,EAAC,CACH,CAAC;KACH;;;YAlEF,UAAU;;;;YAJF,UAAU;4CAad,MAAM,SAAC,aAAa;;;;;;;;AC/BzB,MAgBa,eAAe;;;YAZ3B,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,eAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;;;;;;;;;;;;;;;"}
